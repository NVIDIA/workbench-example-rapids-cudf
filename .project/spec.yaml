specVersion: v2
specMinorVersion: 2
meta:
    name: rapids-cudf
    image: project-rapids-cudf
    description: Accelerate Data Science workflows with RAPIDS cuDF and cuDF.pandas
    labels: []
    createdOn: "2023-09-19T22:48:48Z"
    defaultBranch: main
layout:
    - path: code/
      type: code
      storage: git
    - path: models/
      type: models
      storage: gitlfs
    - path: data/
      type: data
      storage: gitlfs
    - path: data/scratch/
      type: data
      storage: gitignore
environment:
    base:
        registry: nvcr.io
        image: nvidia/rapidsai/notebooks:24.06-cuda12.0-py3.11
        build_timestamp: ""
        name: RAPIDS with CUDA 12.0.1
        supported_architectures: []
        cuda_version: 12.0.1
        description: RAPIDS with CUDA 12.0.1
        entrypoint_script: /home/rapids/entrypoint.sh
        labels:
            - cuda12.0.1
        apps:
            - name: jupyterlab
              type: jupyterlab
              class: webapp
              start_command: jupyter lab --allow-root --port 8888 --ip 0.0.0.0 --no-browser --NotebookApp.base_url=\$PROXY_PREFIX --NotebookApp.default_url=/lab --NotebookApp.allow_origin='*'
              health_check_command: '[ \$(echo url=\$(jupyter lab list | head -n 2 | tail -n 1 | cut -f1 -d'' '' | grep -v ''Currently'' | sed "s@/?@/lab?@g") | curl -o /dev/null -s -w ''%{http_code}'' --config -) == ''200'' ]'
              stop_command: jupyter lab stop 8888
              user_msg: ""
              logfile_path: ""
              timeout_seconds: 60
              icon_url: ""
              webapp_options:
                autolaunch: true
                port: "8888"
                proxy:
                    trim_prefix: false
                url_command: jupyter lab list | head -n 2 | tail -n 1 | cut -f1 -d' ' | grep -v 'Currently'
        programming_languages:
            - python3
        icon_url: ""
        image_version: 24.06.01
        os: linux
        os_distro: ubuntu
        os_distro_release: "22.04"
        schema_version: v2
        user_info:
            uid: "1001"
            gid: "1000"
            username: rapids
        package_managers:
            - name: apt
              binary_path: /usr/bin/apt
              installed_packages:
                - ""
            - name: conda3
              binary_path: /opt/conda/bin/conda
              installed_packages:
                - rapids
                - cudf
                - cuml
                - cugraph
                - rmm
                - pylibraft
                - cuspatial
                - cuxfilter
                - cucim
                - xgboost
                - dask-sql
                - jupyterlab
            - name: pip
              binary_path: /opt/conda/bin/pip
              installed_packages:
                - jupyterlab-nvdashboard
        package_manager_environment:
            name: conda
            target: /opt/conda
    compose_file_path: ""
execution:
    apps:
        - name: jupyterlab
          type: jupyterlab
          class: webapp
          start_command: jupyter lab --allow-root --port 8888 --ip 0.0.0.0 --no-browser --NotebookApp.base_url=\$PROXY_PREFIX --NotebookApp.default_url=/lab --notebook-dir=/project/
          health_check_command: '[ \$(echo url=\$(jupyter lab list 2>&1 | head -n 2 | tail -n 1 | cut -f1 -d'''' '''' | grep -v ''''Currently'''' | sed ''''s@/?@/lab?@g'''') | curl -o /dev/null -s -w ''''%{http_code}'''' --config -) == ''''200'''' ]'
          stop_command: jupyter lab stop 8888
          user_msg: ""
          logfile_path: ""
          timeout_seconds: 60
          icon_url: ""
          webapp_options:
            autolaunch: true
            port: "8888"
            proxy:
                trim_prefix: false
            url_command: jupyter lab list 2>&1 | head -n 2 | tail -n 1 | cut -f1 -d' ' | grep -v 'Currently'
    resources:
        gpu:
            requested: 1
        sharedMemoryMB: 1024
    secrets: []
    mounts:
        - type: project
          target: /project/
          description: Project directory
          options: rw
        - type: volume
          target: /data/tensorboard/logs/
          description: Tensorboard Log Files
          options: volumeName=tensorboard-logs-volume
